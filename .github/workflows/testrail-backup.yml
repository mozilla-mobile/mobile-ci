name: TestRail Backup

on:
  workflow_dispatch:

env:
  BUCKET: backups-testrail-test-suites
  DEFAULT_DIR: ./backup-tools
  SUITE_IDS: 59 14 27 13 48
  # Fenix Browser: 59
  # Firefox for iOS: 14 
  # Focus for iOS: 27 
  # Firefox for Android: 13 
  # Focus for Android:48

jobs:
  test:
    name: Backup test suites
    runs-on: ubuntu-24.04
    defaults:
      run:
        working-directory: ${{ env.DEFAULT_DIR }}

    env:
      TESTRAIL_HOST: ${{ secrets.TESTRAIL_HOST }}
      TESTRAIL_USERNAME: ${{ secrets.TESTRAIL_USERNAME }}
      TESTRAIL_PASSWORD: ${{ secrets.TESTRAIL_PASSWORD }}
      SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL_TEST_ALERTS_SANDBOX }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4.1.4

      - name: Set up Python
        uses: actions/setup-python@v5.1.0
        with:
          python-version: 3.11

      - name: Install dependencies
        run: |
          pip install -r requirements.txt
          
      - name: Establish Google Cloud connection
        uses: google-github-actions/auth@v2
        with:
          credentials_json: ${{ secrets.GCLOUD_AUTH }}

      - name: Fetch test cases
        run: |
          python backup_testrail.py ${{ env.SUITE_IDS }}

      - name: Create README with file listing
        run: |
          touch README.md
          echo "# Test Suites & Test Plans" >> README.md
          echo "" >> README.md
          echo "| Test Suite | Test Plan | File |" >> README.md
          echo "|------------|-----------|------|" >> README.md
          ls *.csv > files.txt
          awk -F '_' '{print "| " $2 " | " $3 " | " $0 " |"}' < files.txt >> README.md

      - name: Create gzip file containing csv and README
        run: |
          today=`date "+%Y-%m-%d"`
          filename=$today-TestRail-Backup

          mkdir $filename
          mv *.csv $filename
          mv README.md $filename
          tar -cvzf $filename.tgz $filename/*

      - name: Upload CSV files to GCP bucket
        uses: google-github-actions/upload-cloud-storage@v2
        with:
          path: ${{ env.DEFAULT_DIR }}/${{ env.filename }}.tgz
          destination: ${{ env.BUCKET }}